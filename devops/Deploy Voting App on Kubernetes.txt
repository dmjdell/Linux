kubectl create ns vote 

---
apiVersion: v1                                               
kind: Service
metadata:
  labels:
    app: vote-app
  name:  vote-service 
  namespace: vote
spec:
  selector:
    app: vote-app
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 80 
    nodePort: 31000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  labels:
    app: vote-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote-app
  template:
    metadata:
      labels:
        app: vote-app
    spec:
      containers:
      - name: vote
        image: kodekloud/examplevotingapp_vote:before
        ports:
        - containerPort: 80
---
apiVersion: v1                                               
kind: Service
metadata:
  labels:
    app: redis 
  name:  redis 
  namespace: vote
spec:
  selector:
    app: redis-deployment
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379 
    nodePort: 31000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-deployment
  template:
    metadata:
      labels:
        app: redis-deployment
    spec:
      containers:
      - name: redis
        image: redis:alpine
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker 
  labels:
    app: worker -deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker -deployment
  template:
    metadata:
      labels:
        app: worker -deployment
    spec:
      containers:
      - name: worker
        image: kodekloud/examplevotingapp_worker
---
apiVersion: v1                                               
kind: Service
metadata:
  labels:
    app: redis 
  name:  db 
  namespace: vote
spec:
  selector:
    app: db-deployment
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432  
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker 
  labels:
    app: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-deployment
  template:
    metadata:
      labels:
        app: db-deployment
    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        env:
        - name: POSTGRES_USER  
          value: "postgres "
        - name: POSTGRES_PASSWORD  
          value: "postgres "
        - name: POSTGRES_HOST_AUTH_METHOD  
          value: "trust"
        - name: GET_HOSTS_FROM 
          value: "dns"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
        - name: db-data
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment 
  labels:
    app: result-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result-deployment
  template:
    metadata:
      labels:
        app: result-deployment
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before
        ports:
        - containerPort: 80
---
apiVersion: v1                                               
kind: Service
metadata:
  labels:
    app: result-service 
  name:  result-service 
  namespace: vote
spec:
  selector:
    app: result-deployment
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 80 
    nodePort: 31001 
  type: NodePort
